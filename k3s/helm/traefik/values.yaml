traefik:
  # Enabling prometheus metrics and access logs
  # Enable access log
  logs:
    access:
      enabled: true
      format: json

  ports:
    web:
      forwardedHeaders:
        insecure: true
    websecure:
      forwardedHeaders:
        insecure: true

  globalArguments:
    - "--global.checknewversion"

  metrics:
    prometheus:
      addEntryPointsLabels: true
      addRoutersLabels: true
      addServicesLabels: true
    service:
      enabled: true

  tracing:
    jaeger:
      samplingServerURL: http://192.168.178.105:5778/sampling
      localAgentHostPort: 192.168.178.105:6831
      samplingType: const

  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    behavior:
      scaleDown:
        stabilizationWindowSeconds: 5
        policies:
        - type: Pods
          value: 1
          periodSeconds: 5

  # Print access log to file instead of stdout
  additionalArguments:
    - "--accesslog.filepath=/data/access.log"

  deployment:
    revisionHistoryLimit: 3
    replicas: 3

  providers:
    # Enable cross namespace references
    kubernetesCRD:
      enabled: true
      allowCrossNamespace: true
      #allowExternalNameServices: true
      #ingressClass: traefik
    # Enable published service
    kubernetesIngress:
      #allowExternalNameServices: true
      #ingressClass: traefik
      publishedService:
        enabled: true
    file:
      enabled: false

  ingressRoute:
    tls:
      secretName: letsencrypt
    dashboard:
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        cert-manager.io/cluster-issuer: letsencrypt
      enabled: true
