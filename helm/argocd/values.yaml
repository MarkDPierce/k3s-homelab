age:
  secretName: &ageSecretName helm-secrets-private-keys

argo-cd:
  global:
    addPrometheusAnnotations: true
    securityContext:
      runAsUser: 999
      runAsGroup: 999
      fsGroup: 999
    revisionHistoryLimit: 5
    image:
      repository: ghcr.io/markdpierce/k3s-homelab/argoproj/argocd
      tag: v2.9.3

  configs:
    cm:
      dex.config: |
        connectors:
          # GitHub example
          - type: github
            id: github
            name: GitHub
            config:
              clientID: $dex.github.clientID
              clientSecret: $dex.github.clientSecret
    credentialTemplates:
      homelab:
        url: git@github.com:MarkDPierce/k3s-homelab.git
        type: git
    params:
      server.insecure: true
    secret:
      argocdServerAdminPassword: $2a$10$2treTPqBeKE82S4YR6g0CuhmDlxtr9qflEXZMA1nwwNp/VGI8kyXG
    repositories:
      cert-manager:
        name: cert-manager
        url: https://charts.jetstack.io
        type: helm
      external-dns:
        name: external-dns
        url: https://kubernetes-sigs.github.io/external-dns
        type: helm
      traefik:
        name: traefik
        url: https://traefik.github.io/charts
        type: helm
      longhorn:
        name: longhorn
        url: https://charts.longhorn.io
        type: helm
      metallb:
        name: metallb
        url: https://metallb.github.io/metallb
        type: helm
      kube-prometheus-stack:
        name: kube-prometheus-stack
        url: https://prometheus-community.github.io/helm-charts
        type: helm

  applicationSet:
    enabled: false

  repoServer:
    autoscaling:
      enabled: false
    logLevel: error
    metrics:
      enabled: true
    serviceAccount:
      create: true
      name: argocd
    env:
      - name: SOPS_AGE_KEY_FILE
        value: /helm-secrets-private-keys/key.txt
    volumes:
      - name: *ageSecretName
        secret:
          secretName: *ageSecretName
    volumeMounts:
      - mountPath: /helm-secrets-private-keys/
        name: *ageSecretName
    rbac:
      - apiGroups:
          - argoproj.io
        resources:
          - applications
        verbs:
          - get
          - list
          - watch

  server:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/tls-acme: "true"
    config:
      helm.valuesFileSchemes: >-
        secrets,
        https
    rbacConfig:
      policy.default: role:readonly
      policy.csv: |
        g, MarkDPierce, role:admin

  crds:
    install: true

argocd-apps:
  applications:
    - name: homelab
      namespace: argo-cd
      project: homelab
      source:
        repoURL: git@github.com:MarkDPierce/k3s-homelab.git
        targetRevision: master
        path: helm/applications
        helm:
          valueFiles:
            - values.dev.yaml
      destination:
        server: https://kubernetes.default.svc
        namespace: argo-cd
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
  projects:
    - name: homelab
      namespace: argo-cd
      sourceRepos:
        - "*"
      destinations:
        - namespace: "*"
          server: https://kubernetes.default.svc
      clusterResourceWhitelist:
        - group: "*"
          kind: "*"
      orphanedResources:
        warn: false
